; Draws an emitter on each vertex position of the given scene
; The velocity
; The initial position of the emitters and particles will be based on
; the given scene
; Recommended to use blend mode: SRC_ALPHA - ONE

; Path where the shaders are stored
sParticleSystemShader /resources/shaders/sections/drawEmitterScene/update.glsl
sBillboardShader /resources/shaders/sections/drawEmitterScene/billboard.glsl

; Each vertex of the 3d model will be a particle emitter
sScene /pool/models/cube/cube.obj

; Time between emissions (seconds)
fEmissionTime 0.1
; Particles Lifetime (seconds)
fParticleLifetime 2

; Particle system Position
; ***************************************************
; Translation
string tx:=0;ty:=0; tz:=0;
; Rotation
string rx:=0; ry:=-90; rz:=0;
; Scale
string sx:=1; sy:=1; sz:=1;

; Particle Parameters
; ***************************************************
; Variables that can be used (apart from the typical 't', 'tend', 'beat', etc):
; nE = Current emitter
; TnE = Total number of emitters

; Speed variability (it impacts the emission time)
string partSpeed:=1.0;
; Randomness factor on the generated particles (0 to infnite)
string partRandomness:=0.1+0.1*sin(t);
; Particle velocity (if you want to modify this through time, use the Geometry shader, because the velocity value is only passed once)
string velX:=0;velY:=0;velZ:=0;
; Particle force to be applied (for example, gravity or wind)
string forceX:=0;forceY:=0;forceZ:=0;
; Particle color: When a aprticle is generated, this color will be assigned
string colorR:=1;colorG:=1;colorB:=1;

; Global values: Particle size and texture
uniform float fParticleSize v1:=0.1;
uniform sampler2D partTexture /resources/textures/dust.png